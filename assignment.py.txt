import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

class MobiusStrip:
    def __init__(self, R=1.0, w=0.5, n=100):
        
        self.R = R
        self.w = w
        self.n = n
        self.u = np.linspace(0, 2 * np.pi, n)
        self.v = np.linspace(-w/2, w/2, n)
        self.U, self.V = np.meshgrid(self.u, self.v)
        self.X, self.Y, self.Z = self._compute_mesh()

    def _compute_mesh(self):
        
        X = (self.R + self.V * np.cos(self.U / 2)) * np.cos(self.U)
        Y = (self.R + self.V * np.cos(self.U / 2)) * np.sin(self.U)
        Z = self.V * np.sin(self.U / 2)
        return X, Y, Z

    def surface_area(self):
        
        dA = 0
        for i in range(self.n - 1):
            for j in range(self.n - 1):
                
                p1 = np.array([self.X[i,j], self.Y[i,j], self.Z[i,j]])
                p2 = np.array([self.X[i+1,j], self.Y[i+1,j], self.Z[i+1,j]])
                p3 = np.array([self.X[i,j+1], self.Y[i,j+1], self.Z[i,j+1]])
                p4 = np.array([self.X[i+1,j+1], self.Y[i+1,j+1], self.Z[i+1,j+1]])
                
                
                area1 = 0.5 * np.linalg.norm(np.cross(p2 - p1, p3 - p1))
                area2 = 0.5 * np.linalg.norm(np.cross(p2 - p4, p3 - p4))
                dA += area1 + area2
        return dA

    def edge_length(self):
        
        
        X_edge = (self.R + (self.w/2) * np.cos(self.u / 2)) * np.cos(self.u)
        Y_edge = (self.R + (self.w/2) * np.cos(self.u / 2)) * np.sin(self.u)
        Z_edge = (self.w/2) * np.sin(self.u / 2)
        
        
        dx = np.diff(X_edge)
        dy = np.diff(Y_edge)
        dz = np.diff(Z_edge)
        L = np.sum(np.sqrt(dx**2 + dy**2 + dz**2))
        return L * 2 

    def plot(self):
        """Visualize the Möbius strip."""
        fig = plt.figure(figsize=(10, 7))
        ax = fig.add_subplot(111, projection='3d')
        ax.plot_surface(self.X, self.Y, self.Z, color='cyan', alpha=0.8)
        ax.set_title("Möbius Strip (R={}, w={})".format(self.R, self.w))
        plt.show()


if __name__ == "__main__":
    mobius = MobiusStrip(R=2.0, w=1.0, n=50)
    print("Surface Area:", mobius.surface_area())
    print("Edge Length:", mobius.edge_length())
    mobius.plot()